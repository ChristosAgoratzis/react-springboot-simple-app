name: CI/CD to DockerHub

on:
  push:
    branches: [ "main" ]

jobs:

  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      frontend: ${{ steps.filter.outputs.frontend }}
      backend: ${{ steps.filter.outputs.backend }}

    steps:
      - uses: actions/checkout@v3
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            frontend:
              - 'react-app/**'
            backend:
              - 'springboot-app/**'

  build-frontend:
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.frontend == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'

      - name: Install frontend dependencies
        run: |
          cd react-app
          npm ci

      - name: Build frontend
        run: |
          cd react-app
          npm run build

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push frontend image
        uses: docker/build-push-action@v6
        with:
          context: ./react-app
          file: ./react-app/Dockerfile
          push: true
          tags: |
            christaras100/react_app:latest
            

  build-backend:

    env:
      SPRING_DATASOURCE_URL: jdbc:postgresql://${{ secrets.DB_HOST }}:5432/${{ secrets.DB_NAME }}
      SPRING_DATASOURCE_USERNAME: ${{ secrets.DB_USERNAME }}
      SPRING_DATASOURCE_PASSWORD: ${{ secrets.DB_PASSWORD }}
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: true
      SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL: true

    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.backend == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21 and cache Maven packages
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'
      - run: |
          cd springboot-app
          mvn clean package -DskipTests
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - uses: docker/build-push-action@v6
        with:
          context: ./springboot-app
          file: ./springboot-app/Dockerfile
          push: true
          tags: |
            christaras100/springboot_app:latest
           
